{"version":3,"sources":["dom.js"],"names":["window","dom","create","string","container","document","createElement","innerHTML","trim","content","firstChild","after","node","node2","parentNode","insertBefore","nextSibling","before","append","parent","child","appendChild","wrap","remove","removeChild","empty","array","x","push","attr","name","value","arguments","length","setAttribute","getAttribute","text","innerText","textContent","html","style","Object","key","class","add","className","classList","contains","on","eventName","fn","addEventListener","off","removeEventListener","find","selector","scope","querySelectorAll","children","siblings","Array","from","filter","n","next","nodeType","previous","previousSibling","each","nodeList","i","call","index","list"],"mappings":"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","file":"dom.e3ea34e3.map","sourceRoot":"..\\src","sourcesContent":["window.dom = {\r\n  create (string) { //创建复杂的元素时<div><span>123</span></div>，将该html内容写到标签里面就会自动变成元素\r\n    const container = document.createElement(\"template\"); //template标签专门用来容纳任意元素，不会显示在页面中\r\n    container.innerHTML = string.trim(); //trim()函数可以去掉字符串左右两侧的空格\r\n    return container.content.firstChild;\r\n  },\r\n  after (node, node2) { //新增弟弟\r\n      node.parentNode.insertBefore(node2, node.nextSibling);//即使node已经是最后一个节点，代码也可以用\r\n  },\r\n  before (node, node2) {  //新增哥哥\r\n    node.parentNode.insertBefore(node2, node);\r\n  },\r\n  append (parent, child) { //新增儿子\r\n      parent.appendChild(child);\r\n  },\r\n  wrap (node, parent) { //新增爸爸\r\n      dom.before(node, parent);\r\n      dom.append(parent,node);\r\n  },\r\n  remove(node){ //会删掉自己连同自己的后代\r\n    node.parentNode.removeChild(node);\r\n    return node; //保留node的引用，万一后续用得到\r\n  },\r\n  empty(node){ //删掉node的后代，但不删自己\r\n    const array = [];\r\n    let x = node.firstChild;\r\n    while(x){\r\n      array.push(dom.remove(x));\r\n      x = node.firstChild;\r\n    }\r\n    return array;\r\n  },\r\n  attr(node, name, value) {  //读、写属性  //重载\r\n    if(arguments.length === 3) {\r\n      node.setAttribute(name, value)\r\n    }else if(arguments.length === 2){\r\n      return node.getAttribute(name)\r\n    }\r\n  },\r\n  text(node, string) {\r\n    if(arguments.length ===2){\r\n      if('innerText' in node) {\r\n        node.innerText = string\r\n      }else{\r\n        node.textContent = string\r\n      }\r\n    }else if(arguments.length ===1){\r\n      if('innerText' in node) {\r\n        return node.innerText\r\n      }else{\r\n        return node.textContent\r\n      }\r\n    } \r\n  },\r\n  html(node, string) {\r\n    if(arguments.length === 2){\r\n      node.innerHTML = string\r\n    }else if (arguments.length === 1){\r\n      return node.innerHTML\r\n    }\r\n  },\r\n  style(node, name, value){\r\n    if(arguments.length === 3){\r\n      //dom.style(test, 'color', 'yellow')，修改\r\n      node.style[name] = value\r\n    }else if (arguments.length === 2){\r\n      \r\n      \r\n      if(typeof name === 'string'){\r\n        //dom.style(test, 'border')，读取\r\n        return node.style[name]\r\n      }else if (name instanceof Object){ //name是Object的实例\r\n        //dom.style(test, {color: 'green'})，修改\r\n        for(let key in name){ //遍历object即name\r\n          node.style[key] = name[key]\r\n        }\r\n      }\r\n    }\r\n  },\r\n  class: {\r\n    add(node, className){\r\n      node.classList.add(className)\r\n    },\r\n    remove(node, className){\r\n      node.classList.remove(className)\r\n    },\r\n    contains(node, className){  //判断node是否包含className\r\n      return node.classList.contains(className)\r\n    }\r\n  },\r\n  on(node, eventName, fn){ //添加事件监听\r\n    node.addEventListener(eventName, fn)\r\n  },\r\n  off(node, eventName, fn){ //删除事件监听\r\n    node.removeEventListener(eventName, fn)\r\n  },\r\n  find(selector, scope){ //获取标签\r\n    return (scope || document).querySelectorAll(selector)\r\n  },\r\n  parent(node){\r\n    return node.parentNode\r\n  },\r\n  children(node){\r\n    return node.children\r\n  },\r\n  siblings(node){\r\n    return Array.from(node.parentNode.children).filter(n=>n!==node)\r\n    //filter()方法创建一个新数组, 其包含通过所提供函数实现的测试的所有元素\r\n  },\r\n  next(node){\r\n    let x = node.nextSibling\r\n    while(x && x.nodeType === 3){\r\n      x = x.nextSibling\r\n    }\r\n    return x\r\n  },\r\n  previous(node){\r\n    let x = node.previousSibling\r\n    while(x && x.nodeType === 3){\r\n      x = x.previousSibling\r\n    }\r\n    return x\r\n  },\r\n  each(nodeList, fn){\r\n    for(let i = 0;i<nodeList.length;i++){\r\n      fn.call(null, nodeList[i])\r\n    }\r\n  },\r\n  index(node){\r\n    const list = dom.children(node.parentNode)\r\n    let i\r\n    for(i=0;i<list.length;i++){\r\n      if(list[i] === node){\r\n        break\r\n      }\r\n    }\r\n    return i\r\n  }\r\n}"]}